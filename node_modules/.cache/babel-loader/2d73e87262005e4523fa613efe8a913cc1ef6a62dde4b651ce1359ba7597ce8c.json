{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-66e271b4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"post__wrap\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"user:\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"post\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"post:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"post__comments\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"comments:\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"post__add\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_w_button = _resolveComponent(\"w-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h3\", null, [_hoisted_2, _createTextVNode(\" \" + _toDisplayString(_ctx.$props.user), 1 /* TEXT */)]), _createElementVNode(\"span\", _hoisted_3, [_hoisted_4, _createTextVNode(\" \" + _toDisplayString(_ctx.$props.post), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.$props.comments, comment => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: comment.id\n    }, [_createElementVNode(\"li\", null, _toDisplayString(comment.body), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_w_button, {\n    onClick: $options.addComment,\n    text: \"add comment\"\n  }, null, 8 /* PROPS */, [\"onClick\"]), _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"post__textarea\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.enteredComment = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.enteredComment]])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","$props","user","_hoisted_3","_hoisted_4","post","_hoisted_5","_hoisted_6","_Fragment","_renderList","comments","comment","key","id","body","_hoisted_7","_createVNode","_component_w_button","onClick","$options","addComment","text","$data","enteredComment","$event"],"sources":["/Users/danilagalitskiy/PhpstormProjects/wahelpwe/src/components/OnePost.vue"],"sourcesContent":["<template>\n  <div class=\"post__wrap\">\n    <h3>\n      <strong>user:</strong>\n      {{ $props.user }}\n    </h3>\n    <span class=\"post\">\n      <strong>post:</strong>\n      {{ $props.post }}\n    </span>\n    <div class=\"post__comments\">\n      <strong>comments:</strong>\n      <ul v-for=\"comment in $props.comments\" :key=\"comment.id\">\n        <li>\n          {{ comment.body }}\n        </li>\n      </ul>\n    </div>\n    <div class=\"post__add\">\n      <w-button @click=\"addComment\" text=\"add comment\"/>\n      <textarea class=\"post__textarea\" v-model=\"enteredComment\"></textarea>\n    </div>\n  </div>\n</template>\n  \n  <script>\nimport WButton from \"@/components/ui/WButton.vue\";\n\nexport default {\n  name: \"OnePost\",\n  components: {WButton},\n  props: {\n    user: String,\n    post: String,\n    comments: Array,\n    idUser: Number,\n    postId: Number,\n  },\n  data() {\n    return {\n      enteredComment: \"\", // введенный текст комментария\n    };\n  },\n  methods: {\n    /** Добавить комментарий */\n    async addComment() {\n      const newCommentData = {\n        postId: this.$props.postId,\n        body: this.enteredComment,\n        email: 'any@mail.com'\n      }\n      const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${this.$props.postId}`, {\n        method: \"POST\",\n        body: JSON.stringify(newCommentData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if(res.ok){\n        alert('комментарий добавлен')\n        this.$emit('getPosts')\n      } else {\n        console.log('Ошибка отправки данных')\n      }\n    },\n  },\n};\n</script>\n  \n<style lang=\"scss\" scoped>\n\n.post {\n  &__wrap {\n    border: $border_one_post;\n    display: $display_one_post_container;\n    flex-direction: $direction_posts_list;\n    border-radius: 15px;\n    padding: 10px;\n  }\n\n  &__comments {\n    border-top: 1px solid #000;\n    padding-top: 10px;\n  }\n\n  &__add {\n    justify-content: center;\n    margin-top: 40px;\n    display: flex;\n    gap: 50px;\n  }\n\n  &__textarea {\n    width: 100%;\n    max-width: 400px;\n  }\n}\n</style>\n  "],"mappings":";;;EACOA,KAAK,EAAC;AAAY;gEAEnBC,mBAAA,CAAsB,gBAAd,OAAK;;EAGTD,KAAK,EAAC;AAAM;gEAChBC,mBAAA,CAAsB,gBAAd,OAAK;;EAGVD,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAA0B,gBAAlB,WAAS;;EAOdD,KAAK,EAAC;AAAW;;;uBAjBxBE,mBAAA,CAqBM,OArBNC,UAqBM,GApBJF,mBAAA,CAGK,aAFHG,UAAsB,E,iBAAA,GACtB,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACC,IAAI,iB,GAEhBP,mBAAA,CAGO,QAHPQ,UAGO,GAFLC,UAAsB,E,iBAAA,GACtB,GAAAL,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACI,IAAI,iB,GAEhBV,mBAAA,CAOM,OAPNW,UAOM,GANJC,UAA0B,G,kBAC1BX,mBAAA,CAIKY,SAAA,QAAAC,WAAA,CAJiBT,IAAA,CAAAC,MAAM,CAACS,QAAQ,EAA1BC,OAAO;yBAAlBf,mBAAA,CAIK;MAJmCgB,GAAG,EAAED,OAAO,CAACE;QACnDlB,mBAAA,CAEK,YAAAI,gBAAA,CADAY,OAAO,CAACG,IAAI,iB;oCAIrBnB,mBAAA,CAGM,OAHNoB,UAGM,GAFJC,YAAA,CAAkDC,mBAAA;IAAvCC,OAAK,EAAEC,QAAA,CAAAC,UAAU;IAAEC,IAAI,EAAC;wDACnC1B,mBAAA,CAAqE;IAA3DD,KAAK,EAAC,gBAAgB;+DAAU4B,KAAA,CAAAC,cAAc,GAAAC,MAAA;iDAAdF,KAAA,CAAAC,cAAc,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}