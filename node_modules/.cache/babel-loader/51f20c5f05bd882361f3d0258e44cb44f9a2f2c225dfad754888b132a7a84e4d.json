{"ast":null,"code":"import OnePost from \"./OnePost.vue\";\nimport OneUser from \"./OneUser.vue\";\n// import OneUserPosts from './OneUserPosts.vue';\nimport _ from \"lodash\";\nexport default {\n  name: \"TabsMain\",\n  components: {\n    OnePost,\n    OneUser\n    // OneUserPosts,\n  },\n\n  data() {\n    return {\n      /** Массивы */\n      comments: [],\n      //комменты\n      users: [],\n      //пользователи\n\n      /** Cписки */\n      users_keyBy: {},\n      // список пользователей по id\n      comments_groupBy: {},\n      // список комментарий для каждого поста\n\n      /** Статусы */\n      is_active_posts: true,\n      //активен таб с постами\n      is_active_users: false,\n      //активен таб с пользователями\n      is_data_await: true,\n      // загрузка данных\n      name_filtered_user: \"\",\n      // имя пользователя, по котормоу фильтруем\n      is_active_one_user: false,\n      // смотрим посты одного пользователя\n      page: 1 /* текущая страница */,\n      limit: 20 /* количество постов получаемых за один раз */\n    };\n  },\n\n  methods: {\n    async getFilteredPosts(userId) {\n      this.posts = [];\n      const res = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`);\n      const posts = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.posts = posts;\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n    /** Получить список пользователей */\n    async getUsers() {\n      this.users = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      const users = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.users = users;\n        this.users_keyBy = _.keyBy(users, \"id\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n    /** Получить список комментариев */\n    async getComments() {\n      this.comments = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\");\n      const comments = await res.json();\n      if (res.ok) {\n        this.comments = comments;\n        this.comments_groupBy = _.groupBy(comments, \"postId\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n    /** Выбрать таб с постами */\n    selectPostsTab() {\n      this.is_active_posts = true;\n      this.is_active_users = false;\n    },\n    /** Выбрать таб с пользователями */\n    selectUsersTab() {\n      this.is_active_posts = false;\n      this.is_active_users = true;\n    },\n    /** Просмотреть посты пользователя */\n    showPostsUser(userId, username) {\n      this.selectPostsTab();\n      this.is_active_one_user = true;\n      this.name_filtered_user = username;\n      this.posts = [];\n      this.getFilteredPosts(userId);\n    },\n    /** Сбросить фильтр */\n    clearFilter() {\n      this.posts = [];\n      this.is_active_one_user = false;\n      this.$store.dispatch('fetchPosts');\n    },\n    /** Скроллинг */\n    fHandleScroll() {\n      if (window.scrollY + window.innerHeight >= document.body.scrollHeight - 50 && !this.is_active_one_user && !this.is_data_await) {\n        this.page++;\n        this.$store.dispatch('fetchPosts');\n      }\n    }\n  },\n  computed: {\n    posts() {\n      return this.$store.state.posts;\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchPosts');\n    this.getComments();\n    this.getUsers();\n    window.addEventListener(\"scroll\", this.fHandleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"scroll\", this.fHandleScroll);\n  }\n};","map":{"version":3,"names":["OnePost","OneUser","_","name","components","data","comments","users","users_keyBy","comments_groupBy","is_active_posts","is_active_users","is_data_await","name_filtered_user","is_active_one_user","page","limit","methods","getFilteredPosts","userId","posts","res","fetch","json","ok","console","log","Error","getUsers","keyBy","getComments","groupBy","selectPostsTab","selectUsersTab","showPostsUser","username","clearFilter","$store","dispatch","fHandleScroll","window","scrollY","innerHeight","document","body","scrollHeight","computed","state","mounted","addEventListener","beforeUnmount","removeEventListener"],"sources":["/Users/danilagalitskiy/PhpstormProjects/wahelpwe/src/components/TabsMain.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n    <div class=\"tabs\">\n      <div\n        :class=\"['posts-tab', { active: is_active_posts }]\"\n        @click=\"selectPostsTab\"\n      >\n        Посты\n      </div>\n      <div\n        :class=\"['users-tab', { active: is_active_users }]\"\n        @click=\"selectUsersTab\"\n      >\n        Пользователи\n      </div>\n    </div>\n    <div class=\"tab-content\">\n      <div\n        class=\"filtered-user_header\"\n        v-if=\"is_active_one_user && is_active_posts\"\n      >\n        <h2>Посты пользователя {{ name_filtered_user }}</h2>\n        <button class=\"close\" @click=\"clearFilter\"></button>\n      </div>\n      <div\n        v-for=\"post in posts\"\n        :key=\"post.id\"\n        :class=\"['posts_list', { hidden: !is_active_posts }]\"\n      >\n        <OnePost\n          :user=\"users_keyBy[post.userId]?.name\"\n          :post=\"post.body\"\n          :comments=\"comments_groupBy[post.id]\"\n          :postId=\"post.id\"\n          @getPosts=\"getPosts\"\n        />\n      </div>\n      <p v-if=\"is_data_await\">Данные загружаются...</p>\n      <div\n        v-for=\"user in users\"\n        :key=\"user.id\"\n        :class=\"['users_list', { hidden: !is_active_users }]\"\n      >\n        <OneUser\n          :userId=\"user.id\"\n          :username=\"user.name\"\n          :is_active_posts=\"is_active_posts\"\n          :is_active_users=\"is_active_users\"\n          @showPostsUser=\"showPostsUser\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport OnePost from \"./OnePost.vue\";\nimport OneUser from \"./OneUser.vue\";\n// import OneUserPosts from './OneUserPosts.vue';\nimport _ from \"lodash\";\nexport default {\n  name: \"TabsMain\",\n  components: {\n    OnePost,\n    OneUser,\n    // OneUserPosts,\n  },\n  data() {\n    return {\n      /** Массивы */\n      comments: [], //комменты\n      users: [], //пользователи\n\n      /** Cписки */\n      users_keyBy: {}, // список пользователей по id\n      comments_groupBy: {}, // список комментарий для каждого поста\n\n      /** Статусы */\n      is_active_posts: true, //активен таб с постами\n      is_active_users: false, //активен таб с пользователями\n      is_data_await: true, // загрузка данных\n      name_filtered_user: \"\", // имя пользователя, по котормоу фильтруем\n      is_active_one_user: false, // смотрим посты одного пользователя\n      page: 1 /* текущая страница */,\n      limit: 20 /* количество постов получаемых за один раз */,\n    };\n  },\n\n  methods: {\n\n    async getFilteredPosts(userId) {\n      this.posts = [];\n      const res = await fetch(\n        `https://jsonplaceholder.typicode.com/posts?userId=${userId}`\n      );\n      const posts = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.posts = posts;\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n\n    /** Получить список пользователей */\n    async getUsers() {\n      this.users = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      const users = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.users = users;\n        this.users_keyBy = _.keyBy(users, \"id\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n\n    /** Получить список комментариев */\n    async getComments() {\n      this.comments = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\");\n      const comments = await res.json();\n      if (res.ok) {\n        this.comments = comments;\n        this.comments_groupBy = _.groupBy(comments, \"postId\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n\n    /** Выбрать таб с постами */\n    selectPostsTab() {\n      this.is_active_posts = true;\n      this.is_active_users = false;\n    },\n\n    /** Выбрать таб с пользователями */\n    selectUsersTab() {\n      this.is_active_posts = false;\n      this.is_active_users = true;\n    },\n\n    /** Просмотреть посты пользователя */\n    showPostsUser(userId, username) {\n      this.selectPostsTab();\n      this.is_active_one_user = true;\n      this.name_filtered_user = username;\n      this.posts = [];\n      this.getFilteredPosts(userId);\n    },\n\n    /** Сбросить фильтр */\n    clearFilter() {\n      this.posts = [];\n      this.is_active_one_user = false;\n      this.$store.dispatch('fetchPosts')\n    },\n\n    /** Скроллинг */\n    fHandleScroll() {\n      if (\n        window.scrollY + window.innerHeight  >= document.body.scrollHeight - 50 &&\n        !this.is_active_one_user &&\n        !this.is_data_await\n      ) {\n        this.page++;\n          this.$store.dispatch('fetchPosts')\n      }\n    },\n  },\n  computed: {\n    posts() {\n      return this.$store.state.posts\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchPosts')\n    this.getComments();\n    this.getUsers();\n    window.addEventListener(\"scroll\", this.fHandleScroll);\n  },\n\n  beforeUnmount() {\n    window.removeEventListener(\"scroll\", this.fHandleScroll);\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n$border_black: 1px solid black;\n$border_width: 1px solid;\n$margin_align_center: 0 auto;\n$tab_content_width: 83vw;\n$tab_content_margin_top: 2rem;\n$filtered_user_header_display: flex;\n$content_align_header: center;\n$button_close_size: 20px;\n$margin_left_close_button: 1rem;\n$background_close_button: url(\"../assets/close.svg\");\n$hidden_view_block: none;\n$cursor: pointer;\n$tabs_display: flex;\n$tabs_gap: 30px;\n$tabs_content_align: center;\n$active_tab_color: grey;\n\n.tabs {\n  display: $tabs_display;\n  gap: $tabs_gap;\n  justify-content: $tabs_content_align;\n}\n.active {\n  background-color: $active_tab_color;\n}\n\n.tab-content {\n  margin: $margin_align_center;\n  width: $tab_content_width;\n  border: $border_black;\n  margin-top: $tab_content_margin_top;\n}\n.posts-tab,\n.users-tab {\n  width: 40vw;\n  border-color: black;\n  border-top: $border_width;\n  border-left: $border_width;\n  border-right: $border_width;\n}\n\n.posts-tab:hover,\n.users-tab:hover {\n  cursor: $cursor;\n}\n\n.hidden {\n  display: $hidden_view_block;\n}\n.filtered-user_header {\n  display: $filtered_user_header_display;\n  justify-content: $content_align_header;\n  align-items: $content_align_header;\n}\n.filtered-user_header {\n  button {\n    width: $button_close_size;\n    height: $button_close_size;\n    margin-left: $margin_left_close_button;\n    background-image: $background_close_button;\n\n    &:hover {\n      cursor: $cursor;\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}