{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    posts: [],\n    // массив постов\n    comments: [],\n    // массив комментариев\n    users: [],\n    // массив пользователей\n    usersKeyBy: {},\n    // объект, хранящий пользователей по ID\n    commentsGroupBy: {},\n    // объект, хранящий комментарии, сгруппированные по ID поста\n    activePostsTab: true,\n    // активный таб с постами\n    activeUsersTab: false,\n    // активный таб с пользователями\n    dataAwait: true,\n    // флаг ожидания данных\n    nameFilteredUser: \"\",\n    // имя отфильтрованного пользователя\n    activeOneUser: false,\n    // флаг просмотра постов одного пользователя\n    page: 1,\n    // текущая страница\n    limit: 20 // количество постов, получаемых за один раз\n  },\n\n  getters: {\n    SET_POSTS(state, posts) {\n      state.posts = posts;\n    },\n    SET_USERS(state, users) {\n      state.users = users;\n    },\n    SET_DATA_AWAIT(state, value) {\n      state.dataAwait = value;\n    }\n  },\n  mutations: {},\n  async fetchUsers({\n    commit\n  }) {\n    commit('SET_DATA_AWAIT', true); // Устанавливаем флаг ожидания\n\n    try {\n      // Выполняем запрос к API для получения пользователей\n      const response = await fetch('https://jsonplaceholder.typicode.com/users');\n      const users = await response.json();\n      commit('SET_USERS', users);\n    } catch (error) {\n      console.error('Произошла ошибка:', error);\n    } finally {\n      commit('SET_DATA_AWAIT', false);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","posts","comments","users","usersKeyBy","commentsGroupBy","activePostsTab","activeUsersTab","dataAwait","nameFilteredUser","activeOneUser","page","limit","getters","SET_POSTS","SET_USERS","SET_DATA_AWAIT","value","mutations","fetchUsers","commit","response","fetch","json","error","console","modules"],"sources":["/Users/danilagalitskiy/PhpstormProjects/wahelpwe/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    posts: [], // массив постов\n    comments: [], // массив комментариев\n    users: [], // массив пользователей\n    usersKeyBy: {}, // объект, хранящий пользователей по ID\n    commentsGroupBy: {}, // объект, хранящий комментарии, сгруппированные по ID поста\n    activePostsTab: true, // активный таб с постами\n    activeUsersTab: false, // активный таб с пользователями\n    dataAwait: true, // флаг ожидания данных\n    nameFilteredUser: \"\", // имя отфильтрованного пользователя\n    activeOneUser: false, // флаг просмотра постов одного пользователя\n    page: 1, // текущая страница\n    limit: 20, // количество постов, получаемых за один раз\n  },\n  getters: {\n    SET_POSTS(state, posts) {\n      state.posts = posts;\n    },\n    SET_USERS(state, users) {\n      state.users = users;\n    },\n    SET_DATA_AWAIT(state, value) {\n      state.dataAwait = value;\n    },\n  },\n  mutations: {\n  },\n  async fetchUsers({ commit }) {\n    commit('SET_DATA_AWAIT', true); // Устанавливаем флаг ожидания\n\n    try {\n      // Выполняем запрос к API для получения пользователей\n      const response = await fetch('https://jsonplaceholder.typicode.com/users');\n      const users = await response.json();\n      commit('SET_USERS', users);\n    } catch (error) {\n      console.error('Произошла ошибка:', error);\n    } finally {\n      commit('SET_DATA_AWAIT', false);\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IAAE;IACXC,QAAQ,EAAE,EAAE;IAAE;IACdC,KAAK,EAAE,EAAE;IAAE;IACXC,UAAU,EAAE,CAAC,CAAC;IAAE;IAChBC,eAAe,EAAE,CAAC,CAAC;IAAE;IACrBC,cAAc,EAAE,IAAI;IAAE;IACtBC,cAAc,EAAE,KAAK;IAAE;IACvBC,SAAS,EAAE,IAAI;IAAE;IACjBC,gBAAgB,EAAE,EAAE;IAAE;IACtBC,aAAa,EAAE,KAAK;IAAE;IACtBC,IAAI,EAAE,CAAC;IAAE;IACTC,KAAK,EAAE,EAAE,CAAE;EACb,CAAC;;EACDC,OAAO,EAAE;IACPC,SAASA,CAACd,KAAK,EAAEC,KAAK,EAAE;MACtBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDc,SAASA,CAACf,KAAK,EAAEG,KAAK,EAAE;MACtBH,KAAK,CAACG,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDa,cAAcA,CAAChB,KAAK,EAAEiB,KAAK,EAAE;MAC3BjB,KAAK,CAACQ,SAAS,GAAGS,KAAK;IACzB;EACF,CAAC;EACDC,SAAS,EAAE,CACX,CAAC;EACD,MAAMC,UAAUA,CAAC;IAAEC;EAAO,CAAC,EAAE;IAC3BA,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEhC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAC1E,MAAMnB,KAAK,GAAG,MAAMkB,QAAQ,CAACE,IAAI,CAAC,CAAC;MACnCH,MAAM,CAAC,WAAW,EAAEjB,KAAK,CAAC;IAC5B,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,SAAS;MACRJ,MAAM,CAAC,gBAAgB,EAAE,KAAK,CAAC;IACjC;EACF,CAAC;EACDM,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}