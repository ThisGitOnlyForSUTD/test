{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport _ from \"lodash\";\nexport default createStore({\n  state: {\n    posts: [],\n    comments: [],\n    users: [],\n    page: 1,\n    limit: 20\n  },\n  getters: {},\n  mutations: {},\n  actions: {\n    async getPosts() {\n      const res = await fetch(`https://jsonplaceholder.typicode.com/posts?_page=${this.page}&_limit=${this.limit}`);\n      const posts = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.posts.push(...posts);\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n    async getFilteredPosts(userId) {\n      this.posts = [];\n      const res = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`);\n      const posts = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.posts = posts;\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n    /** Получить список пользователей */\n    async getUsers() {\n      this.users = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      const users = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.users = users;\n        this.users_keyBy = _.keyBy(users, \"id\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n    /** Получить список комментариев */\n    async getComments() {\n      this.comments = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\");\n      const comments = await res.json();\n      if (res.ok) {\n        this.comments = comments;\n        this.comments_groupBy = _.groupBy(comments, \"postId\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","_","state","posts","comments","users","page","limit","getters","mutations","actions","getPosts","res","fetch","json","is_data_await","ok","push","console","log","Error","getFilteredPosts","userId","getUsers","users_keyBy","keyBy","getComments","comments_groupBy","groupBy","modules"],"sources":["/Users/danilagalitskiy/PhpstormProjects/wahelpwe/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport _ from \"lodash\";\n\nexport default createStore({\n  state: {\n    posts: [],\n    comments: [],\n    users: [],\n    page: 1,\n    limit: 20\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n    async getPosts() {\n      const res = await fetch(\n        `https://jsonplaceholder.typicode.com/posts?_page=${this.page}&_limit=${this.limit}`\n      );\n      const posts = await res.json();\n      this.is_data_await = true;\n\n      if (res.ok) {\n        this.is_data_await = false;\n        this.posts.push(...posts);\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n\n    async getFilteredPosts(userId) {\n      this.posts = [];\n      const res = await fetch(\n        `https://jsonplaceholder.typicode.com/posts?userId=${userId}`\n      );\n      const posts = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.posts = posts;\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n\n    /** Получить список пользователей */\n    async getUsers() {\n      this.users = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      const users = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.users = users;\n        this.users_keyBy = _.keyBy(users, \"id\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n\n    /** Получить список комментариев */\n    async getComments() {\n      this.comments = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\");\n      const comments = await res.json();\n      if (res.ok) {\n        this.comments = comments;\n        this.comments_groupBy = _.groupBy(comments, \"postId\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,CAAC,MAAM,QAAQ;AAEtB,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE,CACX,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,oDAAmD,IAAI,CAACP,IAAK,WAAU,IAAI,CAACC,KAAM,EACrF,CAAC;MACD,MAAMJ,KAAK,GAAG,MAAMS,GAAG,CAACE,IAAI,CAAC,CAAC;MAC9B,IAAI,CAACC,aAAa,GAAG,IAAI;MAEzB,IAAIH,GAAG,CAACI,EAAE,EAAE;QACV,IAAI,CAACD,aAAa,GAAG,KAAK;QAC1B,IAAI,CAACZ,KAAK,CAACc,IAAI,CAAC,GAAGd,KAAK,CAAC;MAC3B,CAAC,MAAM;QACLe,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChD,MAAMC,KAAK;MACb;IACF,CAAC;IAED,MAAMC,gBAAgBA,CAACC,MAAM,EAAE;MAC7B,IAAI,CAACnB,KAAK,GAAG,EAAE;MACf,MAAMS,GAAG,GAAG,MAAMC,KAAK,CACpB,qDAAoDS,MAAO,EAC9D,CAAC;MACD,MAAMnB,KAAK,GAAG,MAAMS,GAAG,CAACE,IAAI,CAAC,CAAC;MAC9B,IAAI,CAACC,aAAa,GAAG,IAAI;MACzB,IAAIH,GAAG,CAACI,EAAE,EAAE;QACV,IAAI,CAACD,aAAa,GAAG,KAAK;QAC1B,IAAI,CAACZ,KAAK,GAAGA,KAAK;MACpB,CAAC,MAAM;QACLe,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChD,MAAMC,KAAK;MACb;IACF,CAAC;IAED;IACA,MAAMG,QAAQA,CAAA,EAAG;MACf,IAAI,CAAClB,KAAK,GAAG,EAAE;MACf,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MACrE,MAAMR,KAAK,GAAG,MAAMO,GAAG,CAACE,IAAI,CAAC,CAAC;MAC9B,IAAI,CAACC,aAAa,GAAG,IAAI;MACzB,IAAIH,GAAG,CAACI,EAAE,EAAE;QACV,IAAI,CAACD,aAAa,GAAG,KAAK;QAC1B,IAAI,CAACV,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACmB,WAAW,GAAGvB,CAAC,CAACwB,KAAK,CAACpB,KAAK,EAAE,IAAI,CAAC;MACzC,CAAC,MAAM;QACLa,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChD,MAAMC,KAAK;MACb;IACF,CAAC;IAED;IACA,MAAMM,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACtB,QAAQ,GAAG,EAAE;MAClB,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAA+C,CAAC;MACxE,MAAMT,QAAQ,GAAG,MAAMQ,GAAG,CAACE,IAAI,CAAC,CAAC;MACjC,IAAIF,GAAG,CAACI,EAAE,EAAE;QACV,IAAI,CAACZ,QAAQ,GAAGA,QAAQ;QACxB,IAAI,CAACuB,gBAAgB,GAAG1B,CAAC,CAAC2B,OAAO,CAACxB,QAAQ,EAAE,QAAQ,CAAC;MACvD,CAAC,MAAM;QACLc,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChD,MAAMC,KAAK;MACb;IACF;EACF,CAAC;EACDS,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}