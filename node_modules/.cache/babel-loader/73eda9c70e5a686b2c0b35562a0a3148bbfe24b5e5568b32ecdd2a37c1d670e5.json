{"ast":null,"code":"import PostDialog from \"./parts/PostDialog.vue\";\nimport OneUser from \"./OneUser.vue\";\n// import OneUserPosts from './OneUserPosts.vue';\nimport WButton from \"@/components/ui/WButton.vue\";\nexport default {\n  name: \"TabsMain\",\n  components: {\n    WButton,\n    PostDialog,\n    OneUser\n    // OneUserPosts,\n  },\n\n  data() {\n    return {\n      users_keyBy: {},\n      // список пользователей по id\n      comments_groupBy: {},\n      // список комментарий для каждого поста\n\n      /** Статусы */\n      is_active_posts: true,\n      //активен таб с постами\n      is_active_users: false,\n      //активен таб с пользователями\n      name_filtered_user: \"\",\n      // имя пользователя, по котормоу фильтруем\n      is_active_one_user: false,\n      // смотрим посты одного пользователя\n      page: 1 /* текущая страница */,\n      limit: 20 /* количество постов получаемых за один раз */\n    };\n  },\n\n  methods: {\n    /** Выбрать таб с постами */\n    selectPostsTab() {\n      this.is_active_posts = true;\n      this.is_active_users = false;\n    },\n    /** Выбрать таб с пользователями */\n    selectUsersTab() {\n      this.is_active_posts = false;\n      this.is_active_users = true;\n    },\n    /** Просмотреть посты пользователя */\n    showPostsUser(userId, username) {\n      this.selectPostsTab();\n      this.is_active_one_user = true;\n      this.name_filtered_user = username;\n      this.posts = [];\n      this.$store.dispatch('fetchComments', userId);\n    },\n    /** Сбросить фильтр */\n    clearFilter() {\n      this.posts = [];\n      this.is_active_one_user = false;\n      this.$store.dispatch('fetchPosts');\n    },\n    /** Скроллинг */\n    fHandleScroll() {\n      if (window.scrollY + window.innerHeight >= document.body.scrollHeight - 50 && !this.is_active_one_user && !this.isLoading) {\n        this.$store.state.page++;\n        this.$store.dispatch('fetchPosts');\n      }\n    }\n  },\n  computed: {\n    isLoading() {\n      return this.$store.state.loading;\n    },\n    posts() {\n      return this.$store.state.posts;\n    },\n    comments() {\n      return this.$store.state.comments;\n    },\n    users() {\n      return this.$store.state.users;\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchPosts');\n    this.$store.dispatch('fetchComments');\n    this.$store.dispatch('fetchUsers');\n    window.addEventListener(\"scroll\", this.fHandleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"scroll\", this.fHandleScroll);\n  }\n};","map":{"version":3,"names":["PostDialog","OneUser","WButton","name","components","data","users_keyBy","comments_groupBy","is_active_posts","is_active_users","name_filtered_user","is_active_one_user","page","limit","methods","selectPostsTab","selectUsersTab","showPostsUser","userId","username","posts","$store","dispatch","clearFilter","fHandleScroll","window","scrollY","innerHeight","document","body","scrollHeight","isLoading","state","computed","loading","comments","users","mounted","addEventListener","beforeUnmount","removeEventListener"],"sources":["/Users/danilagalitskiy/PhpstormProjects/wahelpwe/src/components/TabsView.vue"],"sourcesContent":["<template>\n  <div class=\"tabs-view\">\n    <div class=\"tabs-view__tabs\">\n      <div\n        :class=\"['tabs-view__tab', { active: is_active_posts }]\"\n        @click=\"selectPostsTab\"\n      >\n        Посты\n      </div>\n      <div\n        :class=\"['tabs-view__tab', { active: is_active_users }]\"\n        @click=\"selectUsersTab\"\n      >\n        Пользователи\n      </div>\n    </div>\n    <div class=\"tabs-view__content\">\n      <div\n        class=\"tabs-view__current-user\"\n        v-if=\"is_active_one_user && is_active_posts\"\n      >\n        <h2>\n          <strong>\n            All posts user:\n          </strong>\n          {{ name_filtered_user }}\n        </h2>\n        <w-button\n          text=\"Закрыть\"\n          @click=\"clearFilter\"\n        />\n      </div>\n      <div\n        v-for=\"post in posts\"\n        :key=\"post.id\"\n        :class=\"['posts_list', { hidden: !is_active_posts }]\"\n      >\n        <post-dialog\n          :user=\"users_keyBy[post.userId]?.name\"\n          :post=\"post.body\"\n          :comments=\"comments_groupBy[post.id]\"\n          :postId=\"post.id\"\n          @getPosts=\"$store.dispatch('fetchPosts')\"\n        />\n      </div>\n      <p v-if=\"isLoading\">Данные загружаются...</p>\n      <div\n        v-for=\"user in users\"\n        :key=\"user.id\"\n        :class=\"['users_list', { hidden: !is_active_users }]\"\n      >\n        <OneUser\n          :userId=\"user.id\"\n          :username=\"user.name\"\n          :is_active_posts=\"is_active_posts\"\n          :is_active_users=\"is_active_users\"\n          @showPostsUser=\"showPostsUser\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostDialog from \"./parts/PostDialog.vue\";\nimport OneUser from \"./OneUser.vue\";\n// import OneUserPosts from './OneUserPosts.vue';\nimport WButton from \"@/components/ui/WButton.vue\";\nexport default {\n  name: \"TabsMain\",\n  components: {\n    WButton,\n    PostDialog,\n    OneUser,\n    // OneUserPosts,\n  },\n  data() {\n    return {\n      users_keyBy: {}, // список пользователей по id\n      comments_groupBy: {}, // список комментарий для каждого поста\n\n      /** Статусы */\n      is_active_posts: true, //активен таб с постами\n      is_active_users: false, //активен таб с пользователями\n      name_filtered_user: \"\", // имя пользователя, по котормоу фильтруем\n      is_active_one_user: false, // смотрим посты одного пользователя\n      page: 1 /* текущая страница */,\n      limit: 20 /* количество постов получаемых за один раз */,\n    };\n  },\n\n  methods: {\n    /** Выбрать таб с постами */\n    selectPostsTab() {\n      this.is_active_posts = true;\n      this.is_active_users = false;\n    },\n\n    /** Выбрать таб с пользователями */\n    selectUsersTab() {\n      this.is_active_posts = false;\n      this.is_active_users = true;\n    },\n\n    /** Просмотреть посты пользователя */\n    showPostsUser(userId, username) {\n      this.selectPostsTab();\n      this.is_active_one_user = true;\n      this.name_filtered_user = username;\n      this.posts = [];\n      this.$store.dispatch('fetchComments', userId)\n    },\n\n    /** Сбросить фильтр */\n    clearFilter() {\n      this.posts = [];\n      this.is_active_one_user = false;\n      this.$store.dispatch('fetchPosts')\n    },\n\n    /** Скроллинг */\n    fHandleScroll() {\n      if (\n        window.scrollY + window.innerHeight  >= document.body.scrollHeight - 50 &&\n        !this.is_active_one_user &&\n        !this.isLoading\n      ) {\n          this.$store.state.page++;\n          this.$store.dispatch('fetchPosts')\n      }\n    },\n  },\n  computed: {\n    isLoading() {\n      return this.$store.state.loading\n    },\n    posts() {\n      return this.$store.state.posts\n    },\n    comments() {\n      return this.$store.state.comments\n    },\n    users() {\n      return this.$store.state.users\n    },\n  },\n  mounted() {\n    this.$store.dispatch('fetchPosts')\n    this.$store.dispatch('fetchComments')\n    this.$store.dispatch('fetchUsers')\n    window.addEventListener(\"scroll\", this.fHandleScroll);\n  },\n\n  beforeUnmount() {\n    window.removeEventListener(\"scroll\", this.fHandleScroll);\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n$border_black: 1px solid black;\n$border_width: 1px solid;\n$margin_align_center: 0 auto;\n$tab_content_width: 83vw;\n$tab_content_margin_top: 2rem;\n$filtered_user_header_display: flex;\n$content_align_header: center;\n$button_close_size: 20px;\n$margin_left_close_button: 1rem;\n$hidden_view_block: none;\n$cursor: pointer;\n$tabs_display: flex;\n$tabs_gap: 30px;\n$tabs_content_align: center;\n\n.tabs-view {\n  width: 100%;\n  max-width: 900px;\n  margin: 0 auto;\n  &__tabs {\n    display: flex;\n    justify-content: center;\n    gap: 60px;\n    align-items: center;\n  }\n  &__tab {\n    padding: 10px 15px;\n    border-radius: 40px;\n    cursor: pointer;\n  }\n\n  &__content {\n    margin-top: $tab_content_margin_top;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n  }\n}\n.active {\n  background-color: grey;\n}\n\n.posts-tab,\n.users-tab {\n  width: 40vw;\n  border-color: black;\n  border-top: $border_width;\n  border-left: $border_width;\n  border-right: $border_width;\n}\n\n.posts-tab:hover,\n.users-tab:hover {\n  cursor: $cursor;\n}\n\n.hidden {\n  display: none;\n}\n</style>\n"],"mappings":"AAgEA,OAAOA,UAAS,MAAO,wBAAwB;AAC/C,OAAOC,OAAM,MAAO,eAAe;AACnC;AACA,OAAOC,OAAM,MAAO,6BAA6B;AACjD,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVF,OAAO;IACPF,UAAU;IACVC;IACA;EACF,CAAC;;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC,CAAC;MAAE;MACjBC,gBAAgB,EAAE,CAAC,CAAC;MAAE;;MAEtB;MACAC,eAAe,EAAE,IAAI;MAAE;MACvBC,eAAe,EAAE,KAAK;MAAE;MACxBC,kBAAkB,EAAE,EAAE;MAAE;MACxBC,kBAAkB,EAAE,KAAK;MAAE;MAC3BC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAC,CAAE;IACZ,CAAC;EACH,CAAC;;EAEDC,OAAO,EAAE;IACP;IACAC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACP,eAAc,GAAI,IAAI;MAC3B,IAAI,CAACC,eAAc,GAAI,KAAK;IAC9B,CAAC;IAED;IACAO,cAAcA,CAAA,EAAG;MACf,IAAI,CAACR,eAAc,GAAI,KAAK;MAC5B,IAAI,CAACC,eAAc,GAAI,IAAI;IAC7B,CAAC;IAED;IACAQ,aAAaA,CAACC,MAAM,EAAEC,QAAQ,EAAE;MAC9B,IAAI,CAACJ,cAAc,CAAC,CAAC;MACrB,IAAI,CAACJ,kBAAiB,GAAI,IAAI;MAC9B,IAAI,CAACD,kBAAiB,GAAIS,QAAQ;MAClC,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,eAAe,EAAEJ,MAAM;IAC9C,CAAC;IAED;IACAK,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACH,KAAI,GAAI,EAAE;MACf,IAAI,CAACT,kBAAiB,GAAI,KAAK;MAC/B,IAAI,CAACU,MAAM,CAACC,QAAQ,CAAC,YAAY;IACnC,CAAC;IAED;IACAE,aAAaA,CAAA,EAAG;MACd,IACEC,MAAM,CAACC,OAAM,GAAID,MAAM,CAACE,WAAU,IAAMC,QAAQ,CAACC,IAAI,CAACC,YAAW,GAAI,EAAC,IACtE,CAAC,IAAI,CAACnB,kBAAiB,IACvB,CAAC,IAAI,CAACoB,SAAQ,EACd;QACE,IAAI,CAACV,MAAM,CAACW,KAAK,CAACpB,IAAI,EAAE;QACxB,IAAI,CAACS,MAAM,CAACC,QAAQ,CAAC,YAAY;MACrC;IACF;EACF,CAAC;EACDW,QAAQ,EAAE;IACRF,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACV,MAAM,CAACW,KAAK,CAACE,OAAM;IACjC,CAAC;IACDd,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACC,MAAM,CAACW,KAAK,CAACZ,KAAI;IAC/B,CAAC;IACDe,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACd,MAAM,CAACW,KAAK,CAACG,QAAO;IAClC,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACf,MAAM,CAACW,KAAK,CAACI,KAAI;IAC/B;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAChB,MAAM,CAACC,QAAQ,CAAC,YAAY;IACjC,IAAI,CAACD,MAAM,CAACC,QAAQ,CAAC,eAAe;IACpC,IAAI,CAACD,MAAM,CAACC,QAAQ,CAAC,YAAY;IACjCG,MAAM,CAACa,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACd,aAAa,CAAC;EACvD,CAAC;EAEDe,aAAaA,CAAA,EAAG;IACdd,MAAM,CAACe,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAChB,aAAa,CAAC;EAC1D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}