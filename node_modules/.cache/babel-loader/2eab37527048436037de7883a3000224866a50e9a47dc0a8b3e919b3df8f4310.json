{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-78f3b9f3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"tabs-view\"\n};\nconst _hoisted_2 = {\n  class: \"tabs-view__tabs\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: _normalizeClass(['tabs-view__posts', {\n      active: $data.is_active_posts\n    }]),\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.selectPostsTab && $options.selectPostsTab(...args))\n  }, \" Посты \", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass(['tabs-view__users', {\n      active: $data.is_active_users\n    }]),\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.selectUsersTab && $options.selectUsersTab(...args))\n  }, \" Пользователи \", 2 /* CLASS */)]), _createCommentVNode(\"    <div class=\\\"tab-content\\\">\"), _createCommentVNode(\"      <div\"), _createCommentVNode(\"        class=\\\"filtered-user_header\\\"\"), _createCommentVNode(\"        v-if=\\\"is_active_one_user && is_active_posts\\\"\"), _createCommentVNode(\"      >\"), _createCommentVNode(\"        <h2>Посты пользователя {{ name_filtered_user }}</h2>\"), _createCommentVNode(\"        <button class=\\\"close\\\" @click=\\\"clearFilter\\\"></button>\"), _createCommentVNode(\"      </div>\"), _createCommentVNode(\"      <div\"), _createCommentVNode(\"        v-for=\\\"post in posts\\\"\"), _createCommentVNode(\"        :key=\\\"post.id\\\"\"), _createCommentVNode(\"        :class=\\\"['posts_list', { hidden: !is_active_posts }]\\\"\"), _createCommentVNode(\"      >\"), _createCommentVNode(\"        <OnePost\"), _createCommentVNode(\"          :user=\\\"users_keyBy[post.userId]?.name\\\"\"), _createCommentVNode(\"          :post=\\\"post.body\\\"\"), _createCommentVNode(\"          :comments=\\\"comments_groupBy[post.id]\\\"\"), _createCommentVNode(\"          :postId=\\\"post.id\\\"\"), _createCommentVNode(\"          @getPosts=\\\"$store.dispatch('fetchPosts')\\\"\"), _createCommentVNode(\"        />\"), _createCommentVNode(\"      </div>\"), _createCommentVNode(\"      <p v-if=\\\"is_data_await\\\">Данные загружаются...</p>\"), _createCommentVNode(\"      <div\"), _createCommentVNode(\"        v-for=\\\"user in users\\\"\"), _createCommentVNode(\"        :key=\\\"user.id\\\"\"), _createCommentVNode(\"        :class=\\\"['users_list', { hidden: !is_active_users }]\\\"\"), _createCommentVNode(\"      >\"), _createCommentVNode(\"        <OneUser\"), _createCommentVNode(\"          :userId=\\\"user.id\\\"\"), _createCommentVNode(\"          :username=\\\"user.name\\\"\"), _createCommentVNode(\"          :is_active_posts=\\\"is_active_posts\\\"\"), _createCommentVNode(\"          :is_active_users=\\\"is_active_users\\\"\"), _createCommentVNode(\"          @showPostsUser=\\\"showPostsUser\\\"\"), _createCommentVNode(\"        />\"), _createCommentVNode(\"      </div>\"), _createCommentVNode(\"    </div>\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_normalizeClass","active","$data","is_active_posts","onClick","_cache","args","$options","selectPostsTab","is_active_users","selectUsersTab","_createCommentVNode"],"sources":["/Users/danilagalitskiy/PhpstormProjects/wahelpwe/src/components/TabsView.vue"],"sourcesContent":["<template>\n  <div class=\"tabs-view\">\n    <div class=\"tabs-view__tabs\">\n      <div\n        :class=\"['tabs-view__posts', { active: is_active_posts }]\"\n        @click=\"selectPostsTab\"\n      >\n        Посты\n      </div>\n      <div\n        :class=\"['tabs-view__users', { active: is_active_users }]\"\n        @click=\"selectUsersTab\"\n      >\n        Пользователи\n      </div>\n    </div>\n<!--    <div class=\"tab-content\">-->\n<!--      <div-->\n<!--        class=\"filtered-user_header\"-->\n<!--        v-if=\"is_active_one_user && is_active_posts\"-->\n<!--      >-->\n<!--        <h2>Посты пользователя {{ name_filtered_user }}</h2>-->\n<!--        <button class=\"close\" @click=\"clearFilter\"></button>-->\n<!--      </div>-->\n<!--      <div-->\n<!--        v-for=\"post in posts\"-->\n<!--        :key=\"post.id\"-->\n<!--        :class=\"['posts_list', { hidden: !is_active_posts }]\"-->\n<!--      >-->\n<!--        <OnePost-->\n<!--          :user=\"users_keyBy[post.userId]?.name\"-->\n<!--          :post=\"post.body\"-->\n<!--          :comments=\"comments_groupBy[post.id]\"-->\n<!--          :postId=\"post.id\"-->\n<!--          @getPosts=\"$store.dispatch('fetchPosts')\"-->\n<!--        />-->\n<!--      </div>-->\n<!--      <p v-if=\"is_data_await\">Данные загружаются...</p>-->\n<!--      <div-->\n<!--        v-for=\"user in users\"-->\n<!--        :key=\"user.id\"-->\n<!--        :class=\"['users_list', { hidden: !is_active_users }]\"-->\n<!--      >-->\n<!--        <OneUser-->\n<!--          :userId=\"user.id\"-->\n<!--          :username=\"user.name\"-->\n<!--          :is_active_posts=\"is_active_posts\"-->\n<!--          :is_active_users=\"is_active_users\"-->\n<!--          @showPostsUser=\"showPostsUser\"-->\n<!--        />-->\n<!--      </div>-->\n<!--    </div>-->\n  </div>\n</template>\n\n<script>\n// import OnePost from \"./OnePost.vue\";\n// import OneUser from \"./OneUser.vue\";\n// import OneUserPosts from './OneUserPosts.vue';\nimport _ from \"lodash\";\nexport default {\n  name: \"TabsMain\",\n  components: {\n    OnePost,\n    OneUser,\n    // OneUserPosts,\n  },\n  data() {\n    return {\n      users_keyBy: {}, // список пользователей по id\n      comments_groupBy: {}, // список комментарий для каждого поста\n\n      /** Статусы */\n      is_active_posts: true, //активен таб с постами\n      is_active_users: false, //активен таб с пользователями\n      is_data_await: true, // загрузка данных\n      name_filtered_user: \"\", // имя пользователя, по котормоу фильтруем\n      is_active_one_user: false, // смотрим посты одного пользователя\n      page: 1 /* текущая страница */,\n      limit: 20 /* количество постов получаемых за один раз */,\n    };\n  },\n\n  methods: {\n    async getFilteredPosts(userId) {\n      this.posts = [];\n      const res = await fetch(\n        `https://jsonplaceholder.typicode.com/posts?userId=${userId}`\n      );\n      const posts = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.posts = posts;\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n\n    /** Получить список комментариев */\n    async getComments() {\n      this.comments = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\");\n      const comments = await res.json();\n      if (res.ok) {\n        this.comments = comments;\n        this.comments_groupBy = _.groupBy(comments, \"postId\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n\n    /** Выбрать таб с постами */\n    selectPostsTab() {\n      this.is_active_posts = true;\n      this.is_active_users = false;\n    },\n\n    /** Выбрать таб с пользователями */\n    selectUsersTab() {\n      this.is_active_posts = false;\n      this.is_active_users = true;\n    },\n\n    /** Просмотреть посты пользователя */\n    showPostsUser(userId, username) {\n      this.selectPostsTab();\n      this.is_active_one_user = true;\n      this.name_filtered_user = username;\n      this.posts = [];\n      this.$store.dispatch('fetchComments', userId)\n    },\n\n    /** Сбросить фильтр */\n    clearFilter() {\n      this.posts = [];\n      this.is_active_one_user = false;\n      this.$store.dispatch('fetchPosts')\n    },\n\n    /** Скроллинг */\n    fHandleScroll() {\n      if (\n        window.scrollY + window.innerHeight  >= document.body.scrollHeight - 50 &&\n        !this.is_active_one_user &&\n        !this.is_data_await\n      ) {\n          this.$store.state.page++;\n          this.$store.dispatch('fetchPosts')\n      }\n    },\n  },\n  computed: {\n    posts() {\n      return this.$store.state.posts\n    },\n    comments() {\n      return this.$store.state.comments\n    },\n    users() {\n      return this.$store.state.users\n    },\n  },\n  mounted() {\n    this.$store.dispatch('fetchPosts')\n    this.$store.dispatch('fetchComments')\n    this.$store.dispatch('fetchUsers')\n    window.addEventListener(\"scroll\", this.fHandleScroll);\n  },\n\n  beforeUnmount() {\n    window.removeEventListener(\"scroll\", this.fHandleScroll);\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n$border_black: 1px solid black;\n$border_width: 1px solid;\n$margin_align_center: 0 auto;\n$tab_content_width: 83vw;\n$tab_content_margin_top: 2rem;\n$filtered_user_header_display: flex;\n$content_align_header: center;\n$button_close_size: 20px;\n$margin_left_close_button: 1rem;\n$background_close_button: url(\"../assets/close.svg\");\n$hidden_view_block: none;\n$cursor: pointer;\n$tabs_display: flex;\n$tabs_gap: 30px;\n$tabs_content_align: center;\n$active_tab_color: grey;\n\n.tabs {\n  display: $tabs_display;\n  gap: $tabs_gap;\n  justify-content: $tabs_content_align;\n}\n.active {\n  background-color: $active_tab_color;\n}\n\n.tab-content {\n  margin: $margin_align_center;\n  width: $tab_content_width;\n  border: $border_black;\n  margin-top: $tab_content_margin_top;\n}\n.posts-tab,\n.users-tab {\n  width: 40vw;\n  border-color: black;\n  border-top: $border_width;\n  border-left: $border_width;\n  border-right: $border_width;\n}\n\n.posts-tab:hover,\n.users-tab:hover {\n  cursor: $cursor;\n}\n\n.hidden {\n  display: $hidden_view_block;\n}\n.filtered-user_header {\n  display: $filtered_user_header_display;\n  justify-content: $content_align_header;\n  align-items: $content_align_header;\n}\n.filtered-user_header {\n  button {\n    width: $button_close_size;\n    height: $button_close_size;\n    margin-left: $margin_left_close_button;\n    background-image: $background_close_button;\n\n    &:hover {\n      cursor: $cursor;\n    }\n  }\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAiB;;uBAD9BC,mBAAA,CAmDM,OAnDNC,UAmDM,GAlDJC,mBAAA,CAaM,OAbNC,UAaM,GAZJD,mBAAA,CAKM;IAJHH,KAAK,EAAAK,eAAA;MAAAC,MAAA,EAAiCC,KAAA,CAAAC;IAAe;IACrDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KACvB,SAED,kBACAR,mBAAA,CAKM;IAJHH,KAAK,EAAAK,eAAA;MAAAC,MAAA,EAAiCC,KAAA,CAAAO;IAAe;IACrDL,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,cAAA,IAAAH,QAAA,CAAAG,cAAA,IAAAJ,IAAA,CAAc;KACvB,gBAED,iB,GAENK,mBAAA,mCAAoC,EACpCA,mBAAA,cAAiB,EACjBA,mBAAA,0CAA2C,EAC3CA,mBAAA,0DAA2D,EAC3DA,mBAAA,WAAc,EACdA,mBAAA,gEAAmE,EACnEA,mBAAA,oEAAmE,EACnEA,mBAAA,gBAAmB,EACnBA,mBAAA,cAAiB,EACjBA,mBAAA,mCAAoC,EACpCA,mBAAA,4BAA6B,EAC7BA,mBAAA,mEAAoE,EACpEA,mBAAA,WAAc,EACdA,mBAAA,oBAAuB,EACvBA,mBAAA,sDAAuD,EACvDA,mBAAA,iCAAkC,EAClCA,mBAAA,qDAAsD,EACtDA,mBAAA,iCAAkC,EAClCA,mBAAA,yDAA0D,EAC1DA,mBAAA,cAAiB,EACjBA,mBAAA,gBAAmB,EACnBA,mBAAA,6DAA8D,EAC9DA,mBAAA,cAAiB,EACjBA,mBAAA,mCAAoC,EACpCA,mBAAA,4BAA6B,EAC7BA,mBAAA,mEAAoE,EACpEA,mBAAA,WAAc,EACdA,mBAAA,oBAAuB,EACvBA,mBAAA,iCAAkC,EAClCA,mBAAA,qCAAsC,EACtCA,mBAAA,kDAAmD,EACnDA,mBAAA,kDAAmD,EACnDA,mBAAA,8CAA+C,EAC/CA,mBAAA,cAAiB,EACjBA,mBAAA,gBAAmB,EACnBA,mBAAA,cAAiB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}