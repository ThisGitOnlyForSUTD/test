{"ast":null,"code":"import OnePost from \"./OnePost.vue\";\nimport OneUser from \"./OneUser.vue\";\n// import OneUserPosts from './OneUserPosts.vue';\nimport _ from \"lodash\";\nimport WButton from \"@/components/ui/WButton.vue\";\nexport default {\n  name: \"TabsMain\",\n  components: {\n    WButton,\n    OnePost,\n    OneUser\n    // OneUserPosts,\n  },\n\n  data() {\n    return {\n      users_keyBy: {},\n      // список пользователей по id\n      comments_groupBy: {},\n      // список комментарий для каждого поста\n\n      /** Статусы */\n      is_active_posts: true,\n      //активен таб с постами\n      is_active_users: false,\n      //активен таб с пользователями\n      is_data_await: true,\n      // загрузка данных\n      name_filtered_user: \"\",\n      // имя пользователя, по котормоу фильтруем\n      is_active_one_user: false,\n      // смотрим посты одного пользователя\n      page: 1 /* текущая страница */,\n      limit: 20 /* количество постов получаемых за один раз */\n    };\n  },\n\n  methods: {\n    async getFilteredPosts(userId) {\n      this.posts = [];\n      const res = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`);\n      const posts = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.posts = posts;\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n    /** Получить список комментариев */\n    async getComments() {\n      this.comments = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\");\n      const comments = await res.json();\n      if (res.ok) {\n        this.comments = comments;\n        this.comments_groupBy = _.groupBy(comments, \"postId\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n    /** Выбрать таб с постами */\n    selectPostsTab() {\n      this.is_active_posts = true;\n      this.is_active_users = false;\n    },\n    /** Выбрать таб с пользователями */\n    selectUsersTab() {\n      this.is_active_posts = false;\n      this.is_active_users = true;\n    },\n    /** Просмотреть посты пользователя */\n    showPostsUser(userId, username) {\n      this.selectPostsTab();\n      this.is_active_one_user = true;\n      this.name_filtered_user = username;\n      this.posts = [];\n      this.$store.dispatch('fetchComments', userId);\n    },\n    /** Сбросить фильтр */\n    clearFilter() {\n      this.posts = [];\n      this.is_active_one_user = false;\n      this.$store.dispatch('fetchPosts');\n    },\n    /** Скроллинг */\n    fHandleScroll() {\n      if (window.scrollY + window.innerHeight >= document.body.scrollHeight - 50 && !this.is_active_one_user && !this.is_data_await) {\n        this.$store.state.page++;\n        this.$store.dispatch('fetchPosts');\n      }\n    }\n  },\n  computed: {\n    posts() {\n      return this.$store.state.posts;\n    },\n    comments() {\n      return this.$store.state.comments;\n    },\n    users() {\n      return this.$store.state.users;\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchPosts');\n    this.$store.dispatch('fetchComments');\n    this.$store.dispatch('fetchUsers');\n    window.addEventListener(\"scroll\", this.fHandleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"scroll\", this.fHandleScroll);\n  }\n};","map":{"version":3,"names":["OnePost","OneUser","_","WButton","name","components","data","users_keyBy","comments_groupBy","is_active_posts","is_active_users","is_data_await","name_filtered_user","is_active_one_user","page","limit","methods","getFilteredPosts","userId","posts","res","fetch","json","ok","console","log","Error","getComments","comments","groupBy","selectPostsTab","selectUsersTab","showPostsUser","username","$store","dispatch","clearFilter","fHandleScroll","window","scrollY","innerHeight","document","body","scrollHeight","state","computed","users","mounted","addEventListener","beforeUnmount","removeEventListener"],"sources":["/Users/danilagalitskiy/PhpstormProjects/wahelpwe/src/components/TabsView.vue"],"sourcesContent":["<template>\n  <div class=\"tabs-view\">\n    <div class=\"tabs-view__tabs\">\n      <div\n        :class=\"['tabs-view__posts', { active: is_active_posts }]\"\n        @click=\"selectPostsTab\"\n      >\n        Посты\n      </div>\n      <div\n        :class=\"['tabs-view__users', { active: is_active_users }]\"\n        @click=\"selectUsersTab\"\n      >\n        Пользователи\n      </div>\n    </div>\n    <div class=\"tab-content\">\n      <div\n        class=\"filtered-user_header\"\n        v-if=\"is_active_one_user && is_active_posts\"\n      >\n        <h2>\n          <strong>\n            All posts user:\n          </strong>\n          {{ name_filtered_user }}\n        </h2>\n        <w-button\n          text=\"Закрыть\"\n          @click=\"clearFilter\"\n        />\n      </div>\n      <div\n        v-for=\"post in posts\"\n        :key=\"post.id\"\n        :class=\"['posts_list', { hidden: !is_active_posts }]\"\n      >\n        <OnePost\n          :user=\"users_keyBy[post.userId]?.name\"\n          :post=\"post.body\"\n          :comments=\"comments_groupBy[post.id]\"\n          :postId=\"post.id\"\n          @getPosts=\"$store.dispatch('fetchPosts')\"\n        />\n      </div>\n      <p v-if=\"is_data_await\">Данные загружаются...</p>\n      <div\n        v-for=\"user in users\"\n        :key=\"user.id\"\n        :class=\"['users_list', { hidden: !is_active_users }]\"\n      >\n        <OneUser\n          :userId=\"user.id\"\n          :username=\"user.name\"\n          :is_active_posts=\"is_active_posts\"\n          :is_active_users=\"is_active_users\"\n          @showPostsUser=\"showPostsUser\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport OnePost from \"./OnePost.vue\";\nimport OneUser from \"./OneUser.vue\";\n// import OneUserPosts from './OneUserPosts.vue';\nimport _ from \"lodash\";\nimport WButton from \"@/components/ui/WButton.vue\";\nexport default {\n  name: \"TabsMain\",\n  components: {\n    WButton,\n    OnePost,\n    OneUser,\n    // OneUserPosts,\n  },\n  data() {\n    return {\n      users_keyBy: {}, // список пользователей по id\n      comments_groupBy: {}, // список комментарий для каждого поста\n\n      /** Статусы */\n      is_active_posts: true, //активен таб с постами\n      is_active_users: false, //активен таб с пользователями\n      is_data_await: true, // загрузка данных\n      name_filtered_user: \"\", // имя пользователя, по котормоу фильтруем\n      is_active_one_user: false, // смотрим посты одного пользователя\n      page: 1 /* текущая страница */,\n      limit: 20 /* количество постов получаемых за один раз */,\n    };\n  },\n\n  methods: {\n    async getFilteredPosts(userId) {\n      this.posts = [];\n      const res = await fetch(\n        `https://jsonplaceholder.typicode.com/posts?userId=${userId}`\n      );\n      const posts = await res.json();\n      this.is_data_await = true;\n      if (res.ok) {\n        this.is_data_await = false;\n        this.posts = posts;\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n\n    /** Получить список комментариев */\n    async getComments() {\n      this.comments = [];\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\");\n      const comments = await res.json();\n      if (res.ok) {\n        this.comments = comments;\n        this.comments_groupBy = _.groupBy(comments, \"postId\");\n      } else {\n        console.log(\"Ошибка получения данных с сервера\");\n        throw Error;\n      }\n    },\n\n    /** Выбрать таб с постами */\n    selectPostsTab() {\n      this.is_active_posts = true;\n      this.is_active_users = false;\n    },\n\n    /** Выбрать таб с пользователями */\n    selectUsersTab() {\n      this.is_active_posts = false;\n      this.is_active_users = true;\n    },\n\n    /** Просмотреть посты пользователя */\n    showPostsUser(userId, username) {\n      this.selectPostsTab();\n      this.is_active_one_user = true;\n      this.name_filtered_user = username;\n      this.posts = [];\n      this.$store.dispatch('fetchComments', userId)\n    },\n\n    /** Сбросить фильтр */\n    clearFilter() {\n      this.posts = [];\n      this.is_active_one_user = false;\n      this.$store.dispatch('fetchPosts')\n    },\n\n    /** Скроллинг */\n    fHandleScroll() {\n      if (\n        window.scrollY + window.innerHeight  >= document.body.scrollHeight - 50 &&\n        !this.is_active_one_user &&\n        !this.is_data_await\n      ) {\n          this.$store.state.page++;\n          this.$store.dispatch('fetchPosts')\n      }\n    },\n  },\n  computed: {\n    posts() {\n      return this.$store.state.posts\n    },\n    comments() {\n      return this.$store.state.comments\n    },\n    users() {\n      return this.$store.state.users\n    },\n  },\n  mounted() {\n    this.$store.dispatch('fetchPosts')\n    this.$store.dispatch('fetchComments')\n    this.$store.dispatch('fetchUsers')\n    window.addEventListener(\"scroll\", this.fHandleScroll);\n  },\n\n  beforeUnmount() {\n    window.removeEventListener(\"scroll\", this.fHandleScroll);\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\n.tabs {\n  display: $tabs_display;\n  gap: $tabs_gap;\n  justify-content: $tabs_content_align;\n}\n.active {\n  background-color: black;\n}\n\n.tab-content {\n  margin: $margin_align_center;\n  width: $tab_content_width;\n  border: $border_black;\n  margin-top: $tab_content_margin_top;\n}\n.posts-tab,\n.users-tab {\n  width: 40vw;\n  border-color: black;\n  border-top: $border_width;\n  border-left: $border_width;\n  border-right: $border_width;\n}\n\n.posts-tab:hover,\n.users-tab:hover {\n  cursor: $cursor;\n}\n\n.hidden {\n  display: $hidden_view_block;\n}\n.filtered-user_header {\n  display: $filtered_user_header_display;\n  justify-content: $content_align_header;\n  align-items: $content_align_header;\n}\n.filtered-user_header {\n  button {\n    width: $button_close_size;\n    height: $button_close_size;\n    margin-left: $margin_left_close_button;\n    background-image: $background_close_button;\n\n    &:hover {\n      cursor: $cursor;\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}