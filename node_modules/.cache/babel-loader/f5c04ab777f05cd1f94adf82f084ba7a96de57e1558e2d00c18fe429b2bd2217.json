{"ast":null,"code":"import WButton from \"@/components/ui/WButton.vue\";\nexport default {\n  name: \"OnePost\",\n  components: {\n    WButton\n  },\n  props: {\n    user: String,\n    post: String,\n    comments: Array,\n    idUser: Number,\n    postId: Number\n  },\n  data() {\n    return {\n      enteredComment: \"\" // введенный текст комментария\n    };\n  },\n\n  methods: {\n    /** Добавить комментарий */\n    async addComment() {\n      const newCommentData = {\n        postId: this.$props.postId,\n        body: this.enteredComment,\n        email: 'any@mail.com'\n      };\n      const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${this.$props.postId}`, {\n        method: \"POST\",\n        body: JSON.stringify(newCommentData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (res.ok) {\n        alert('комментарий добавлен');\n        this.$emit('getPosts');\n      } else {\n        console.log('Ошибка отправки данных');\n      }\n    }\n  }\n};","map":{"version":3,"names":["WButton","name","components","props","user","String","post","comments","Array","idUser","Number","postId","data","enteredComment","methods","addComment","newCommentData","$props","body","email","res","fetch","method","JSON","stringify","headers","ok","alert","$emit","console","log"],"sources":["/Users/danilagalitskiy/PhpstormProjects/wahelpwe/src/components/OnePost.vue"],"sourcesContent":["<template>\n  <div class=\"post__wrap\">\n    <h3>\n      <strong>user:</strong>\n      {{ $props.user }}\n    </h3>\n    <span class=\"post\">\n      <strong>post:</strong>\n      {{ $props.post }}\n    </span>\n    <div class=\"post__comments\">\n      <strong>comments:</strong>\n      <ul v-for=\"comment in $props.comments\" :key=\"comment.id\">\n        <li>\n          {{ comment.body }}\n        </li>\n      </ul>\n    </div>\n    <div class=\"post__add\">\n      <w-button @click=\"addComment\" text=\"add comment\"/>\n      <textarea type=\"text\" v-model=\"enteredComment\"></textarea>\n    </div>\n  </div>\n</template>\n  \n  <script>\nimport WButton from \"@/components/ui/WButton.vue\";\n\nexport default {\n  name: \"OnePost\",\n  components: {WButton},\n  props: {\n    user: String,\n    post: String,\n    comments: Array,\n    idUser: Number,\n    postId: Number,\n  },\n  data() {\n    return {\n      enteredComment: \"\", // введенный текст комментария\n    };\n  },\n  methods: {\n    /** Добавить комментарий */\n    async addComment() {\n      const newCommentData = {\n        postId: this.$props.postId,\n        body: this.enteredComment,\n        email: 'any@mail.com'\n      }\n      const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${this.$props.postId}`, {\n        method: \"POST\",\n        body: JSON.stringify(newCommentData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if(res.ok){\n        alert('комментарий добавлен')\n        this.$emit('getPosts')\n      } else {\n        console.log('Ошибка отправки данных')\n      }\n    },\n  },\n};\n</script>\n  \n<style lang=\"scss\" scoped>\n$border_one_post: 1px solid black;\n$display_one_post_container: flex;\n$add_comment_display: flex;\n$direction_posts_list: column;\n$direction_add_comment: column;\n$width_add-comment_block: 50%;\n$margin_align_center: 0 auto;\n$header_color: grey;\n$button_margin-top: 1rem;\n$comment_textarea_margin: 1rem 0;\n$comment_height: 100px;\n$comment_border: 1px solid red;\n$comment_header_weigth: bold;\n$post_header_weigth: bold;\n\n.post {\n  &__wrap {\n    border: $border_one_post;\n    display: $display_one_post_container;\n    flex-direction: $direction_posts_list;\n    border-radius: 15px;\n    padding: 10px;\n  }\n\n  &__comments {\n    border-top: 1px solid #000;\n  }\n\n  &__add {\n    display: flex;\n  }\n}\n</style>\n  "],"mappings":"AA0BA,OAAOA,OAAM,MAAO,6BAA6B;AAEjD,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IAACF;EAAO,CAAC;EACrBG,KAAK,EAAE;IACLC,IAAI,EAAEC,MAAM;IACZC,IAAI,EAAED,MAAM;IACZE,QAAQ,EAAEC,KAAK;IACfC,MAAM,EAAEC,MAAM;IACdC,MAAM,EAAED;EACV,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE,CAAE;IACtB,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMC,cAAa,GAAI;QACrBL,MAAM,EAAE,IAAI,CAACM,MAAM,CAACN,MAAM;QAC1BO,IAAI,EAAE,IAAI,CAACL,cAAc;QACzBM,KAAK,EAAE;MACT;MACA,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAE,wDAAuD,IAAI,CAACJ,MAAM,CAACN,MAAO,EAAC,EAAE;QACpGW,MAAM,EAAE,MAAM;QACdJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACR,cAAc,CAAC;QACpCS,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAGL,GAAG,CAACM,EAAE,EAAC;QACRC,KAAK,CAAC,sBAAsB;QAC5B,IAAI,CAACC,KAAK,CAAC,UAAU;MACvB,OAAO;QACLC,OAAO,CAACC,GAAG,CAAC,wBAAwB;MACtC;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}