{"ast":null,"code":"import WButton from '@/components/ui/WButton.vue';\nexport default {\n  components: {\n    WButton\n  },\n  props: {\n    user: String,\n    post: String,\n    comments: Array,\n    idUser: Number,\n    postId: Number\n  },\n  data() {\n    return {\n      inputComment: \"\"\n    };\n  },\n  computed: {\n    isButtonDisabled() {\n      return !this.inputComment.trim(); // Отключить кнопку, если в инпуте только пробелы или пусто\n    }\n  },\n\n  methods: {\n    async addComment() {\n      if (!this.isButtonDisabled) {\n        const newCommentData = {\n          postId: this.$props.postId,\n          body: this.inputComment,\n          email: 'voloshenko.inc@gmail.com'\n        };\n        try {\n          await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${this.$props.postId}`, {\n            method: \"POST\",\n            body: JSON.stringify(newCommentData),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          alert('комментарий добавлен');\n          this.$emit('getPosts');\n        } catch (error) {\n          console.log('Ошибка отправки данных');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["WButton","components","props","user","String","post","comments","Array","idUser","Number","postId","data","inputComment","computed","isButtonDisabled","trim","methods","addComment","newCommentData","$props","body","email","fetch","method","JSON","stringify","headers","alert","$emit","error","console","log"],"sources":["/Users/danilagalitskiy/PhpstormProjects/wahelpwe/src/components/parts/PostDialog.vue"],"sourcesContent":["<template>\n  <div class=\"post__wrap\">\n    <h3>\n      <strong>пользователь:</strong>\n      {{ $props.user }}\n    </h3>\n    <span class=\"post\">\n      <strong>пост:</strong>\n      {{ $props.post }}\n    </span>\n    <div class=\"post__comments\">\n      <strong>комментарии:</strong>\n      <ul v-for=\"comment in $props.comments\" :key=\"comment.id\">\n        <li>\n          {{ comment.body }}\n        </li>\n      </ul>\n    </div>\n    <div class=\"post__add\">\n      <w-button @click=\"addComment\" text=\"Добавить\" :disabled=\"isButtonDisabled\" />\n      <input class=\"post__input\" placeholder=\"Напишите комментарий\" v-model=\"inputComment\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport WButton from '@/components/ui/WButton.vue'\n\nexport default {\n  components: { WButton },\n  props: {\n    user: String,\n    post: String,\n    comments: Array,\n    idUser: Number,\n    postId: Number,\n  },\n  data() {\n    return {\n      inputComment: \"\",\n    };\n  },\n  computed: {\n    isButtonDisabled() {\n      return !this.inputComment.trim(); // Отключить кнопку, если в инпуте только пробелы или пусто\n    },\n  },\n  methods: {\n    async addComment() {\n      if (!this.isButtonDisabled) {\n        const newCommentData = {\n          postId: this.$props.postId,\n          body: this.inputComment,\n          email: 'voloshenko.inc@gmail.com'\n        }\n        try {\n          await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${this.$props.postId}`, {\n            method: \"POST\",\n            body: JSON.stringify(newCommentData),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          });\n          alert('комментарий добавлен')\n          this.$emit('getPosts')\n        } catch (error) {\n          console.log('Ошибка отправки данных')\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.post {\n  &__wrap {\n    border: 1px solid black;\n    display: flex;\n    flex-direction: column;\n    border-radius: 15px;\n    padding: 10px;\n  }\n\n  &__comments {\n    border-top: 1px solid #000;\n    padding-top: 10px;\n  }\n\n  &__add {\n    justify-content: center;\n    margin-top: 40px;\n    display: flex;\n    gap: 50px;\n  }\n\n  &__input {\n    width: 100%;\n    max-width: 400px;\n    border-radius: 15px;\n    height: 40px;\n    padding: 0 10px;\n    border: 1px solid;\n  }\n}\n.w-button:disabled {\n  cursor: not-allowed !important;\n}\n</style>\n"],"mappings":"AA0BA,OAAOA,OAAM,MAAO,6BAA4B;AAEhD,eAAe;EACbC,UAAU,EAAE;IAAED;EAAQ,CAAC;EACvBE,KAAK,EAAE;IACLC,IAAI,EAAEC,MAAM;IACZC,IAAI,EAAED,MAAM;IACZE,QAAQ,EAAEC,KAAK;IACfC,MAAM,EAAEC,MAAM;IACdC,MAAM,EAAED;EACV,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,CAAC,IAAI,CAACF,YAAY,CAACG,IAAI,CAAC,CAAC,EAAE;IACpC;EACF,CAAC;;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACH,gBAAgB,EAAE;QAC1B,MAAMI,cAAa,GAAI;UACrBR,MAAM,EAAE,IAAI,CAACS,MAAM,CAACT,MAAM;UAC1BU,IAAI,EAAE,IAAI,CAACR,YAAY;UACvBS,KAAK,EAAE;QACT;QACA,IAAI;UACF,MAAMC,KAAK,CAAE,wDAAuD,IAAI,CAACH,MAAM,CAACT,MAAO,EAAC,EAAE;YACxFa,MAAM,EAAE,MAAM;YACdH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACP,cAAc,CAAC;YACpCQ,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UACFC,KAAK,CAAC,sBAAsB;UAC5B,IAAI,CAACC,KAAK,CAAC,UAAU;QACvB,EAAE,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAAC,wBAAwB;QACtC;MACF;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}